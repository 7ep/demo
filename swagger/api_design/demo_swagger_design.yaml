swagger: "2.0"
info:
  description: "a demo application"
  version: "1.0.0"
  title: "Demo app"
  contact:
    email: "info@coveros.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/demo"
tags:
- name: "borrower"
  description: "related to borrowers of books"
- name: "book"
  description: "related to books"
schemes:
- "http"
paths:

  /borrower:
    post:
      tags:
      - "borrower"
      summary: "register a new borrower"
      description: ""
      operationId: "registerBorrower"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "borrower that needs to be enabled for borrowing books"
        required: true
        schema:
          $ref: "#/definitions/Borrower"
      responses:
        405:
          description: "Invalid input"
  /borrower/{borrowerId}:
    get:
      tags:
      - "borrower"
      summary: "Find borrower by ID"
      description: "Returns a single borrower"
      operationId: "getBorrowerById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "borrowerId"
        in: "path"
        description: "ID of borrower to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Borrower"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Borrower not found"
    delete:
      tags:
      - "borrower"
      summary: "Deletes a borrower"
      description: ""
      operationId: "deleteBorrower"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "borrowerId"
        in: "path"
        description: "Borrower id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Borrower not found"
          
  /book:
    post:
      tags:
      - "book"
      summary: "register a new book"
      description: ""
      operationId: "registerBook"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "book that needs to be added to the library"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        405:
          description: "Invalid input"
  /book/{bookId}:
    get:
      tags:
      - "book"
      summary: "Find book by ID"
      description: "Returns a single book"
      operationId: "getBookById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
    delete:
      tags:
      - "book"
      summary: "Deletes a book"
      description: ""
      operationId: "deleteBook"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "bookId"
        in: "path"
        description: "book id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "book not found"
  
          
definitions:
  Borrower:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "alice"
    xml:
      name: "alice"
  Book:
    type: "object"
    required:
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "alice"
    xml:
      name: "The Devops Handbook"      
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
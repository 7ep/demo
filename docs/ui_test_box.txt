making a box for UI-level testing

(First create the Jenkins box.  See jenkins_box_guide.txt, then come back)

In VirtualBox, click on New.

Create a new system "uitestbox"

Make sure to choose Mac osX 64 bit for the operating system.  It's not a Mac, but for
some reason this makes mouse integration work beautifully.

Set it to use 3072 megabytes of ram and 12 gigs hard drive.

Alter its settings:
  In Networking: Adapter 1 should be NAT, Adapter 2 should be host-only networking
  Put the CentOS7 disc in the virtual drive.

Start the server.

Choose to install Centos7.  (No need to check the media first)

Choose English as the language
Click Installation Destination and click Done on the followup screen to return
Click Network & Hostname and toggle the network "ON", and set Host name to "uitestbox", then click Done.
Click Software selection and choose KDE Plasma Workspaces, then click Done
Click Begin Installation
Click on User Creation.  Provide information for a user (see CREATE USER DURING INSTALL in jenkins_box_guide.txt)

... wait for the install to complete...

reboot.

Click on Licensing.  Accept.  Click Done.  Click Finish Installation.

Login.

Right-click the screen and click on Konsole to get a command-line terminal.

Disable the firewall (see DISABLE FIREWALL in jenkins_box_guide.txt)
Disable SELinux (see DISABLE SELINUX in jenkins_box_guide.txt)
Allow no-password login in ssh (see ENABLE SSH WITH NO PASSWORD in jenkins_box_guide.txt)
Disable strict host key checking (see DISABLE STRICT HOST KEY CHECKING in jenkins_box_guide.txt)

reboot.  Login.

Now you can connect to your uitestbox by SSH.  Do the rest of this in ssh.

Install Chrome:

 $ sudo yum install -y wget
 $ wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
 $ sudo yum localinstall -y google-chrome-stable_current_x86_64.rpm

Start Chrome by selecting it from the bottom left-hand button and entering
the text "Chrome", then click on the icon.  Choose a means of securing information,
(I used Classic, blowfish encrypted file because it was easier to set up.  Remember,
you aren't doing anything on this box but UI testing)
and get through until you see the chrome://welcome page.  Test it by going to Google.com

Get Java installed.  See INSTALL JAVA in jenkins_box_guide.txt

Get Git installed.  See INSTALL GIT in jenkins_box_guide.txt

The system will need a Database.  Install.  See DATABASE_INSTALL in jenkins_box_guide.txt

Following the database install...
We also want to make this database able to be hit from outside the
box, so we can restore and run database migrations on it
from outside.  To do that, first, open the configuration file:

$ sudo vi /var/lib/pgsql/10/data/postgresql.conf

then, replace line

#listen_addresses = 'localhost'
    with
listen_addresses = '*'

Then..

at the end of /var/lib/pgsql/10/data/pg_hba.conf, add these lines:

# everything on this subnet has access to this database
host    all             all             10.0.2.255/24             trust


INSTALL PYTHON 3
----------------

$ sudo yum install -y gcc openssl-devel bzip2-devel libffi-devel
$ wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz
$ tar xzf Python-3.7.0.tgz
$ cd Python-3.7.0
$ ./configure --enable-optimizations
$ sudo make altinstall

INSTALL PIP
-----------

$ curl https://bootstrap.pypa.io/get-pip.py -o ~/get-pip.py
$ sudo su

INSTALL PYTHON DEPENDENCIES
---------------------------

(do the following as root, if it starts with a hash mark)

# /usr/local/bin/python3.7 ~/get-pip.py
# pip3.7 install behave
# pip3.7 install selenium
# pip3.7 install pyhamcrest
# pip3.7 install requests
# exit

( That will exit being root)

Download Chromedriver from here: http://chromedriver.chromium.org/downloads.  At the
time of writing this, the URL went as follows:

$ curl https://chromedriver.storage.googleapis.com/2.45/chromedriver_linux64.zip > ~/chromedriver_linux64.zip

Download and unzip it on your path.  I recommend a place that is
already on your path, /usr/local/sbin

$ sudo unzip ~/chromedriver_linux64.zip -d /usr/local/sbin


install Tomcat 9:
$ wget http://www.gtlib.gatech.edu/pub/apache/tomcat/tomcat-9/v9.0.14/bin/apache-tomcat-9.0.14.tar.gz
$ tar zxf apache-tomcat-9.0.14.tar.gz
$ sudo mv apache-tomcat-9.0.14 /opt/tomcat
$ sudo useradd -r tomcat --shell /bin/false
$ sudo chown -R tomcat:tomcat /opt/tomcat/

at /etc/init.d/tomcat9 create this file:


---------------------------------- FILE START
#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          tomcat9
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Tomcat.
# Description:       Start the Tomcat servlet engine.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=tomcat9
DESC="Tomcat servlet engine"
CATALINA_HOME=/opt/tomcat

if [ `id -u` -ne 0 ]; then
  echo "You need root privileges to run this script"
  exit 1
fi


case "$1" in
  start)
    sudo -utomcat $CATALINA_HOME/bin/startup.sh
    sleep 5
    ;;
  stop)
    sudo -utomcat $CATALINA_HOME/bin/shutdown.sh
    ;;
esac

---------------------------------- FILE END

Change its permissions
$ sudo chmod 755 /etc/init.d/tomcat9

Add it to chkconfig

$ sudo chkconfig tomcat9 on

Now you can start the Apache Tomcat 9 server and enable it to start on boot time

$ sudo systemctl start tomcat9
$ sudo systemctl enable tomcat9

Tomcat will start serving on port 8080 on the machine.

INSTALLING OWASP-ZAP
--------------------
$ wget https://download.opensuse.org/repositories/home:cabelo/CentOS_7/home:cabelo.repo
$ sudo mv home:cabelo.repo /etc/yum.repos.d/home_cabelo.repo
$ sudo yum install -y owasp-zap

Start zap like Chrome - go to the icon in the bottom left of the screen and search
for Zap.  When it appears, click it.  You'll need to accept the agreement to continue.

Choose *not* to persist the ZAP session, and check the box to remember the choice.  Then
Click on Start.

On the menu bar, under Help, click on "Check for updates..." and update as suggested.

Change the port number so it doesn't interfere with our demo application:

Open ZAP, Tools--> Options --> local proxies
Change the default 8080 port to 8888 and click Ok.

In order to test out Zap, in the Quick Start tab, enter the following URL

URL to attack: http://localhost:8080/demo

Then, click Attack.

To do the same thing from the command line, run this:

/usr/share/owasp-zap/zap.sh -cmd -quickurl http://localhost:8080/demo